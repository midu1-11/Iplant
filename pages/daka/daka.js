// pages/daka/daka.js

var mqtt=require('../../utils/mqtt.min.js')
var client=null

Page({
    data: {
        js_count:'0',
        js_state:'0',
        sf_count:'0',
        sf_state:'0',
        st_count:'0',
        st_state:'0',
        jz_count:'0',
        jz_state:'0',
        bz_count:'0',
        bz_state:'0',
        jj_count:'0',
        jj_state:'0'
    },

    onLoad: function (options) {
        this.connectmqtt() 
    },
    connectmqtt:function(){
        var that=this
        const options={
          connectTimeout:4000,
          clientId:'dyp'+Math.ceil(Math.random()*10),
          port:8084,
          username:'783959ae451cc150e4ddb2f7098da1f3',
          password:'duyupeng'
        }
        client=mqtt.connect('wxs://t.yoyolife.fun/mqtt',options)
        client.on('connect',(e)=>{
          console.log('服务器连接成功')
          client.subscribe('/iot/300/dyp',{qos:0},function(err){
            if(!err)
            {console.log('订阅成功')}
          })
        })
        //信息监听事件
        client.on('message',function(topic,message){
          let tem={}
          tem=JSON.parse(message)
          if(tem.mark==2){
            that.setData({
              js_count:tem.js_count,
              js_state:tem.js_state,
              sf_count:tem.sf_count,
              sf_state:tem.sf_state,
              st_count:tem.st_count,
              st_state:tem.st_state,
              jz_count:tem.jz_count,
              jz_state:tem.jz_state,
              bz_count:tem.bz_count,
              bz_state:tem.bz_state,
              jj_count:tem.jj_count,
              jj_state:tem.jj_state
            })
          }
          console.log('收到'+message.toString())
        })
        client.on('reconnect',(error)=>{
          console.log('正在重连中',error)
        })
        client.on('error',(error)=>{
          console.log('连接失败',error)
        })
      },
    jiaoshui:function(event){
        client.publish('/iot/300/cc','js',function(err){
            if(!err)
            {
              console.log('成功发送指令-浇水打卡')
            }
          })
      },
      shifei:function(event){
        client.publish('/iot/300/cc','sf',function(err){
            if(!err)
            {
              console.log('成功发送指令-施肥打卡')
            }
          })
      },
      songtu:function(event){
        client.publish('/iot/300/cc','st',function(err){
            if(!err)
            {
              console.log('成功发送指令-松土打卡')
            }
          })
      },
      jianzhi:function(event){
        client.publish('/iot/300/cc','jz',function(err){
            if(!err)
            {
              console.log('成功发送指令-剪枝打卡')
            }
          })
      },
      bozhong:function(event){
        client.publish('/iot/300/cc','bz',function(err){
            if(!err)
            {
              console.log('成功发送指令-播种打卡')
            }
          })
      },
      jiajie:function(event){
        client.publish('/iot/300/cc','jj',function(err){
            if(!err)
            {
              console.log('成功发送指令-嫁接打卡')
            }
          })
      }
})